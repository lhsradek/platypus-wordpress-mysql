version: '3.9'

volumes:
  wordpress:
    external: true
    name: "${NAME}-wp-${NUM}"
  phpmyadmin:
    external: true
    name: "${NAME}-pma-${NUM}"
  mysql:
    external: true
    name: "${NAME}-db-${NUM}"
# redis:
#   external: true
#   name: "${NAME}-redis-${NUM}"

networks:
  default:
    external: true
    name: ${DOCKER_NETWORK}
  # local network:
  intnet:
    external: false
    name: ${INT_NETWORK}

services:
  webwp:
    # Alpine WORDPRESS
    image: nginx:alpine
    # image: lhsradek/lhsdock:v3
    container_name: "${APP_ID}-webwp"
    hostname: "webwp"
    # hostname: "webwp.${INT_NETWORK}"
    # restart: "no"
    restart: always
    # ports:
    #  - 4443:443
    environment:
      - COMPOSE_HTTP_TIMEOUT=120
    networks:
      # for traefik:
      - default
      # local network:
      - intnet
    volumes:
      # - /root/bin/alpine:/root/bin/alpine:ro
      - ./extras/nginx/default-http.conf:/etc/nginx/conf.d/default.conf:ro
      # for https
      # - ./extras/nginx/default-https.conf:/etc/nginx/conf.d/default.conf:ro
      # - ./extras/nginx/pki/${CERTNAME}.pem:/etc/ssl/private/cacert.pem:ro
      # - ./extras/nginx/pki/${CERTNAME}-key.pem:/etc/ssl/private/cacert-key.pem:ro
      # - ./application/html:/var/www/html
      - wordpress:/var/www/html/wp:rw
      - phpmyadmin:/var/www/html/pma:rw
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${DOCKER_NETWORK}"
      - "traefik.http.routers.${APP_ID}-webwp-public.rule=Host(`${APP_HOST}`, `${WP_PHP_MY_ADMIN_HOST}`)"
      - "traefik.http.routers.${APP_ID}-webwp-public.entrypoints=https"
      - "traefik.http.routers.${APP_ID}-webwp-public.tls=true"
      # for https
      # - "traefik.http.services.webwp-platypus-${NAME}-mysql.loadbalancer.server.scheme=https"
      # - "traefik.http.services.webwp-platypus-${NAME}-mysql.loadbalancer.server.port=443"

  webwp-php:
    # Alpine WORDPRESS-php
    image: wordpress:fpm-alpine
    container_name: "${APP_ID}-webwp-php"
    hostname: "webwp-php"
    # hostname: "webwp.${INT_NETWORK}"
    # restart: "no"
    restart: always
    environment:
      # - WORDPRESS_DB_HOST=db.${INT_NETWORK}
      - WORDPRESS_DB_HOST=db
      - WORDPRESS_DB_NAME=${APP_ID}
      - WORDPRESS_DB_USER=${APP_ID}
      - WORDPRESS_DB_PASSWORD=${WP_DB_PASSWORD}
      - HEADLESS_FRONTEND_URL=${HEADLESS_FRONTEND_URL}
      - |
        WORDPRESS_CONFIG_EXTRA=
        define( 'WP_HOME', "${WP_HOME}" );
        define( 'WP_SITEURL', "${WP_HOME}" );
        define( 'WP_ENVIRONMENT_TYPE', "${ENVIRONMENT_TYPE}" );
        define( 'WP_REDIS_HOST', "redis" );
    networks:
      # local network:
      - intnet
    volumes:
      # - /root/bin/alpine:/root/bin/alpine:ro
      # - ./application/html:/var/www/html
      - wordpress:/var/www/html:rw

  webpma-php:
    # Alpine phpMyAdmin-php
    image: phpmyadmin:fpm-alpine
    container_name: "${APP_ID}-webpma-php"
    hostname: "webpma-php"
    # hostname: "pma"
    # hostname: "webpma.${INT_NETWORK}"
    # hostname: "pma.${APP_HOST}"
    # restart: "no"
    restart: always
    environment:
      # - PMA_HOST=db.${INT_NETWORK}
      - PMA_HOST=db
      - PMA_ARBITRARY=0
    networks:
      # local network:
      - intnet
    volumes:
    # -  /root/bin/alpine:/root/bin/alpine:ro
    #- ./application/html:/var/www/html
      - ./application/html/pma/config.inc.php:/var/www/html/pma/config.inc.php:ro
      - phpmyadmin:/var/www/html:rw

  db:
    # Ubuntu - db 
    image: mariadb
    container_name: "${APP_ID}-db"
    hostname: "db"
    # restart: "no"
    restart: always
    # ports:
    #  - 3306:3306
    networks:
      # local network:
      - intnet
    environment:
      MYSQL_ROOT_PASSWORD: ${WP_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${APP_ID}
      MYSQL_USER: ${APP_ID}
      MYSQL_PASSWORD: ${WP_DB_PASSWORD}
    volumes:
      # - /root/bin/ubuntu:/root/bin/ubuntu:ro
      - mysql:/var/lib/mysql

#   redis:
#     image: redis:7.0.4-alpine
#     # Alpine Linux
#     container_name: "${APP_ID}-redis"
#     hostname: "redis"
#     # hostname: "redis.${INT_NETWORK}"
#     restart: always
#     networks:
#       # local network:
#       - intnet
#     environment:
#       - ALLOW_EMPTY_PASSWORD=yes
#     # ports:
#     # - 6379:6379
#     volumes:
#       - ./extras/etc/sysctl.conf:/etc/sysctl.conf:rw
#       - ./extras/etc/sysctl.d/sysctl.conf:/etc/sysctl.d/sysctl.conf:rw
#       - redis:/data:rw
