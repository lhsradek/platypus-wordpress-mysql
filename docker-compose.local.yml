version: '3.9'

networks:
  default:
    external: true
    name: ${DOCKER_NETWORK}
  # local network:
  intnet:
    external: false
    name: ${INT_NETWORK}

services:
  webwp:
    # Alpine WORDPRESS
    # image: lhsradek/lhsdock:v3
    image: nginx:alpine
    container_name: "${APP_ID}-webwp"
    # hostname: "webwp"
    hostname: "webwp.${INT_NETWORK}"
    restart: ${DOCKER_RESTART_POLICY}
    # ports:
    #  - 80:80
    #  - 4443:443
    networks:
      # for traefik:
      - default
      # local network:
      - intnet
    volumes:
      # - /root/bin/alpine:/root/bin/alpine:ro
      - wordpress:/var/www/html/wp:rw
      - phpmyadmin:/var/www/html/pma:rw
      - ./logs/wordpress-nginx:/var/log/nginx:rw
      # for http
      - ./extras/nginx/default-http.conf:/etc/nginx/conf.d/default.conf:ro
      # for https
      # - ./extras/nginx/default-https.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certs/rootCA.pem:/etc/phpmyadmin/cacert.pem:ro
      - ./certs/${CERTNAME}.pem:/etc/ssl/private/cacert.pem:ro
      - ./certs/${CERTNAME}-key.pem:/etc/ssl/private/cacert-key.pem:ro
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${DOCKER_NETWORK}"
      - "traefik.http.routers.webwp-${NUM}-public.rule=Host(`${APP_HOST}`, `${WP_PHP_MY_ADMIN_HOST}`)"
      - "traefik.http.routers.webwp-${NUM}-public.entrypoints=https"
      - "traefik.http.routers.webwp-${NUM}-public.tls=true"
      # for https
      # - "traefik.http.services.webwp-platypus-${NAME}-mysql.loadbalancer.server.scheme=https"
      # - "traefik.http.services.webwp-platypus-${NAME}-mysql.loadbalancer.server.port=443"

  webwp-php:
    # Alpine WORDPRESS-php
    image: wordpress:fpm-alpine
    container_name: "${APP_ID}-webwp-php"
    # hostname: "webwp-php"
    hostname: "webwp-php.${INT_NETWORK}"
    restart: ${DOCKER_RESTART_POLICY}
    environment:
      - WORDPRESS_DB_HOST=db.${INT_NETWORK}
      - WORDPRESS_DB_NAME=${APP_ID}
      - WORDPRESS_DB_USER=${APP_ID}
      - WORDPRESS_DB_PASSWORD=${WP_DB_PASSWORD}
      - |
        WORDPRESS_CONFIG_EXTRA=
        define( 'WP_HOME', "${WP_HOME}" );
        define( 'WP_SITEURL', "${WP_HOME}" );
        define( 'WP_ENVIRONMENT_TYPE', "${ENVIRONMENT_TYPE}" );
        define( 'MYSQL_CLIENT_FLAGS', MYSQLI_CLIENT_SSL );
        define( 'WP_REDIS_HOST', "redis" );
    networks:
      # local network:
      - intnet
    volumes:
      # - /root/bin/alpine:/root/bin/alpine:ro
      - wordpress:/var/www/html:rw
      - ./application/html/favicon.ico:/var/www/html/favicon.ico:rw
      - ./certs/${CERTNAME}.pem:/etc/ssl/private/cacert.pem:ro
      - ./certs/${CERTNAME}-key.pem:/etc/ssl/private/cacert-key.pem:ro
      # - ./application/html/phpinfo.php:/var/www/html/phpinfo.php:rw

  webpma-php:
    # Alpine phpMyAdmin-php
    image: phpmyadmin:fpm-alpine
    container_name: "${APP_ID}-webpma-php"
    hostname: "webpma-php.${INT_NETWORK}"
    restart: ${DOCKER_RESTART_POLICY}
    environment:
      - PMA_HOST=db.${INT_NETWORK}
      - PMA_ARBITRARY=0
      - UPLOAD_LIMIT=1280M
    networks:
      # local network:
      - intnet
    volumes:
      # - /root/bin/alpine:/root/bin/alpine:ro
      - phpmyadmin:/var/www/html:rw
      - ./extras/pma/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php:ro
      - ./certs/rootCA.pem:/etc/phpmyadmin/cacert.pem:ro
      # - ./application/html/phpinfo.php:/var/www/html/phpinfo.php:rw

  db:
    # Ubuntu - db 
    image: mariadb
    container_name: "${APP_ID}-db"
    # hostname: "db"
    hostname: "db.${INT_NETWORK}"
    restart: ${DOCKER_RESTART_POLICY}
    # ports:
    #  - 3306:3306
    networks:
      # local network:
      - intnet
    environment:
      MYSQL_ROOT_PASSWORD: ${WP_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${APP_ID}
      MYSQL_USER: ${APP_ID}
      MYSQL_PASSWORD: ${WP_DB_PASSWORD}
      MYSQL_INITDB_SKIP_TZINFO: "true"
    volumes:
      # - /root/bin/ubuntu:/root/bin/ubuntu:ro
      - mysql:/var/lib/mysql:rw
      - ./extras/etc/mysql/mariadb.conf.d/50-server.cnf:/etc/mysql/mariadb.conf.d/50-server.cnf:ro
      - ./logs/wordpress-mysql:/var/log/mysql:rw
      - ./certs/rootCA.pem:/etc/mysql/cacert.pem:ro
      - ./certs/${CERTNAME}.pem:/etc/mysql/server-cert.pem:ro
      - ./certs/${CERTNAME}-key.pem:/etc/mysql/server-key.pem:ro

  redis:
    image: redis:7.0.4-alpine
    # Alpine Linux
    container_name: "${APP_ID}-redis"
    hostname: "redis"
    # hostname: "redis.${INT_NETWORK}"
    restart: ${DOCKER_RESTART_POLICY}
    networks:
      # local network:
      - intnet
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    # ports:
    # - 6379:6379
    volumes:
      # -  /root/bin/alpine:/root/bin/alpine:ro
      - ./extras/etc/sysctl.conf:/etc/sysctl.conf:ro
      # - ./extras/var/lib/sysctl.d/00-alpine.conf:/var/lib/sysctl.d/00-alpine.conf:rw
      - redis:/data:rw
      - ./certs/rootCA.pem:/etc/ssl/private/cacert.pem:ro
      - ./certs/${CERTNAME}.pem:/etc/ssl/private/server-cert.pem:ro
      - ./certs/${CERTNAME}-key.pem:/etc/ssl/private/server-cert-key.pem:ro

volumes:
  wordpress:
    external: true
    name: "${NAME}-wp-${NUM}"
  phpmyadmin:
    external: true
    name: "${NAME}-pma-${NUM}"
  mysql:
    external: true
    name: "${NAME}-db-${NUM}"
  redis:
    external: false
    name: "${NAME}-redis-${NUM}"
