version: '3.9'

networks:
  default:
    external: true
    name: ${DOCKER_NETWORK}
  # local network:
  intnet:
    external: false
    name: ${INT_NETWORK}

services:
  webwp:
    # Alpine WORDPRESS
    image: lhsradek/lhsdock:v3
    # image: nginx:alpine
    container_name: "${APP_ID}-webwp"
    # hostname: "webwp"
    hostname: "webwp.${INT_NETWORK}"
    restart: ${DOCKER_RESTART_POLICY}
    # ports:
    #  - 80:80
    #  - 4443:443
    networks:
      # for traefik:
      - default
      # local network:
      - intnet
    volumes:
      # The first mount add bash and ping to nginx:alpine - lhsradek/lhsdock this dont'n need, see:
      # https://github.com/lhsradek/platypus-lhsdock/blob/main/context/Dockerfile of lhsradek/lhsdock:v3
      - ./extras/nginx/add.sh:/docker-entrypoint.d/05-add-packages.sh
      - wordpress:/var/www/html/wp:rw
      - phpmyadmin:/var/www/html/pma:rw
      - ./logs/wordpress-nginx:/var/log/nginx:rw
      # for http
      - ./extras/nginx/default-http.conf:/etc/nginx/conf.d/default.conf:ro
      # for https
      # - ./extras/nginx/default-https.conf:/etc/nginx/conf.d/default.conf:ro
      # for ssl
      # - ./certs/ca.crt:/etc/ssl/private/ca.pem:ro
      # - ./certs/${CERTNAME}.crt:/etc/ssl/private/cacert.pem:ro
      # - ./certs/${CERTNAME}.key:/etc/ssl/private/cacert-key.pem:ro
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${DOCKER_NETWORK}"
      - "traefik.http.routers.webwp-${NUM}-public.rule=Host(`${APP_HOST}`, `${WP_PHP_MY_ADMIN_HOST}`)"
      - "traefik.http.routers.webwp-${NUM}-public.entrypoints=https"
      - "traefik.http.routers.webwp-${NUM}-public.tls=true"
      # if http
      - "traefik.http.services.weblhs-platypus-${APP_ID}.loadbalancer.server.port=80"
      - "traefik.http.services.weblhs-platypus-${APP_ID}.loadbalancer.server.scheme=http"
      # else https
      # - "traefik.http.services.weblhs-platypus-${APP_ID}.loadbalancer.server.port=443"
      # - "traefik.http.services.weblhs-platypus-${APP_ID}.loadbalancer.server.scheme=https"
      # fi
    healthcheck:
      test: "curl -s -I http://localhost/nginx_status | grep -q 'HTTP/1.1 200 OK'"
      interval: 10s
      timeout: 20s
      retries: 50

  webwp-php:
    # Alpine WORDPRESS-php
    image: wordpress:fpm-alpine
    container_name: "${APP_ID}-webwp-php"
    # hostname: "webwp-php"
    hostname: "webwp-php.${INT_NETWORK}"
    restart: ${DOCKER_RESTART_POLICY}
    environment:
      - WORDPRESS_DB_HOST=db
      - WORDPRESS_DB_NAME=${APP_ID}
      - WORDPRESS_DB_USER=${APP_ID}
      - WORDPRESS_DB_PASSWORD=${WP_DB_PASSWORD}
      # define( 'MYSQL_CLIENT_FLAGS', MYSQLI_CLIENT_SSL ); 
      - |
        WORDPRESS_CONFIG_EXTRA=
        define( 'WP_HOME', "${WP_HOME}" );
        define( 'WP_SITEURL', "${WP_HOME}" );
        define( 'WP_ENVIRONMENT_TYPE', "${ENVIRONMENT_TYPE}" );
        define( 'WP_REDIS_HOST', "redis" );
    networks:
      # local network:
      - intnet
    volumes:
      - wordpress:/var/www/html:rw
      # - ./certs/ca.crt:/var/www/html/wp-includes/certificates/rootCA.crt:ro
      # - ./application/html/favicon.ico:/var/www/html/favicon.ico:rw
      # - ./application/html/phpinfo.php:/var/www/html/phpinfo.php:rw

  webpma-php:
    # Alpine phpMyAdmin-php
    image: phpmyadmin:fpm-alpine
    container_name: "${APP_ID}-webpma-php"
    hostname: "webpma-php.${INT_NETWORK}"
    restart: ${DOCKER_RESTART_POLICY}
    environment:
      - PMA_HOST=db
      - PMA_ARBITRARY=0
      - UPLOAD_LIMIT=1280M
    networks:
      # local network:
      - intnet
    volumes:
      - phpmyadmin:/var/www/html:rw
      # for ssl
      - ./extras/pma/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php:ro
      # - ./certs/ca.crt:/etc/phpmyadmin/cacert.pem:ro
      # - ./certs/${CERTNAME}.crt:/etc/phpmyadmin/cert.pem:ro
      # - ./certs/${CERTNAME}.key:/etc/phpmyadmin/cert-key.pem:ro
      # - ./application/html/phpinfo.php:/var/www/html/phpinfo.php:rw

  db:
    # Ubuntu - db 
    image: mariadb
    container_name: "${APP_ID}-db"
    # hostname: "db"
    hostname: "db"
    restart: ${DOCKER_RESTART_POLICY}
    # ports:
    #  - 3306:3306
    networks:
      # local network:
      - intnet
    environment:
      MYSQL_ROOT_PASSWORD: ${WP_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${APP_ID}
      MYSQL_USER: ${APP_ID}
      MYSQL_PASSWORD: ${WP_DB_PASSWORD}
      MYSQL_INITDB_SKIP_TZINFO: "true"
    volumes:
      - mysql:/var/lib/mysql:rw
      - ./logs/wordpress-mysql:/var/log/mysql:rw
      - ./extras/etc/mysql/mariadb.conf.d/50-server.cnf:/etc/mysql/mariadb.conf.d/50-server.cnf:ro
      # for ssl
      # - ./extras/etc/mysql/mariadb.conf.d/50-server-ssl.cnf:/etc/mysql/mariadb.conf.d/50-server.cnf:ro
      # - ./certs/ca.crt:/etc/mysql/cacert.pem:ro
      # - ./certs/db.crt:/etc/mysql/server-cert.pem:ro
      # - ./certs/db.key:/etc/mysql/server-key.pem:ro

  redis:
    # Alpine Linux
    image: redis:7.0.4-alpine
    container_name: "${APP_ID}-redis"
    hostname: "redis"
    # hostname: "redis.${INT_NETWORK}"
    restart: ${DOCKER_RESTART_POLICY}
    networks:
      # local network:
      - intnet
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    # ports:
    # - 6379:6379
    volumes:
      - ./extras/etc/sysctl.conf:/etc/sysctl.conf:ro
      # - ./extras/var/lib/sysctl.d/00-alpine.conf:/var/lib/sysctl.d/00-alpine.conf:rw
      - redis:/data:rw

volumes:
  wordpress:
    external: true
    name: "${NAME}-wp-${NUM}"
  phpmyadmin:
    external: true
    name: "${NAME}-pma-${NUM}"
  mysql:
    external: true
    name: "${NAME}-db-${NUM}"
  redis:
    external: true
    name: "${NAME}-redis-${NUM}"
