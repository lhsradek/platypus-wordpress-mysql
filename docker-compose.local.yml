version: '3.9'

networks:
  default:
    external: true
    name: ${DOCKER_NETWORK}
  # local network:
  intnet:
    external: false
    name: ${INT_NETWORK}

services:

  webwp:
    # Alpine
    # image: lhsradek/lhsdock:v3
    image: nginx:alpine
    container_name: "${APP_ID}-webwp"
    hostname: "webwp.${INT_NETWORK}"
    restart: ${DOCKER_RESTART_POLICY}
    # ports:
    #  - 80:80
    #  - 4443:443
    networks:
      # for traefik:
        - default
      # local network:
        - intnet
    volumes:
      # The first mount add bash and ping to nginx:alpine - lhsradek/lhsdock this dont'n need, see:
      # https://github.com/lhsradek/platypus-lhsdock/blob/main/context/Dockerfile of lhsradek/lhsdock:v3
      - ./extras/nginx/add.sh:/docker-entrypoint.d/05-add-packages.sh
      - ./logs/wordpress-nginx:/var/log/nginx:rw
      - ./extras/nginx/default-https.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certs/ca.crt:/etc/ssl/private/ca.pem:ro
      - ./certs/${CERTNAME}.crt:/etc/ssl/private/cacert.pem:ro
      - ./certs/${CERTNAME}.key:/etc/ssl/private/cacert-key.pem:ro
      - wordpress:/var/www/html/wp:rw
      - phpmyadmin:/var/www/html/pma:rw
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${DOCKER_NETWORK}"
      - "traefik.http.routers.webwp-${NUM}-public.rule=Host(`${APP_HOST}`, `${WP_PHP_MY_ADMIN_HOST}`)"
      - "traefik.http.routers.webwp-${NUM}-public.entrypoints=https"
      - "traefik.http.routers.webwp-${NUM}-public.tls=true"
      - "traefik.http.services.webwp-${APP_ID}.loadbalancer.server.port=443"
      - "traefik.http.services.webwp-${APP_ID}.loadbalancer.server.scheme=https"
    healthcheck:
      test: "curl -s -I http://localhost/nginx_status | grep -q 'HTTP/1.1 200 OK'"
      interval: 10s
      timeout: 10s
      retries: 500

  webwp-php:
    # Alpine WORDPRESS-php for install or update
    # image: wordpress:fpm-alpine
    # with elastic-apm-php agent https://www.elastic.co/guide/en/apm/agent/php/current/intro.html
    # https://github.com/lhsradek/platypus-lhsfpm/blob/main/context/Dockerfile
    # for https://github.com/lhsradek/platypus-lhsdock
    image: lhsradek/fpm:v1
    container_name: "${APP_ID}-webwp-php"
    # hostname: "webwp-php"
    hostname: "webwp-php.${APP_NICK}.${INT_NETWORK}"
    restart: ${DOCKER_RESTART_POLICY}
    networks:
      # local network:
      - intnet
    environment:
      - ELASTIC_APM_ENVIRONMENT=${STAGE}
      - ELASTIC_APM_LOG_LEVEL_STDERR=info
      - ELASTIC_APM_API_KEY=${ELASTIC_APM_API_KEY}
      - ELASTIC_APM_SERVER_URL=${ELASTIC_APM_SERVER_URL}
      - ELASTIC_APM_SERVICE_NAME=${APP_NICK}-${APP_ID}
      - ELASTIC_APM_HOSTNAME=${APP_NICK}.${INT_NETWORK}
      - WORDPRESS_DB_HOST=db.${APP_HOST}
      - WORDPRESS_DB_NAME=${APP_ID}
      - WORDPRESS_DB_USER=${APP_ID}
      - WORDPRESS_DB_PASSWORD=${WP_DB_PASSWORD}
      - |
        WORDPRESS_CONFIG_EXTRA=
        define( 'MYSQL_CLIENT_FLAGS', MYSQLI_CLIENT_SSL ); 
        define( 'WP_HOME', "${WP_HOME}" );
        define( 'WP_SITEURL', "${WP_HOME}" );
        define( 'WP_ENVIRONMENT_TYPE', "${ENVIRONMENT_TYPE}" );
        define( 'WP_REDIS_HOST', "redis" );
    volumes:
      - ./extras/php/phpSettings.conf:/usr/local/etc/php-fpm.d/zzz-phpSettings.conf
      - ./certs/ca.crt:/var/www/html/wp-includes/certificates/rootCA.crt:ro
      # - ./certs/${CERTNAME}.crt:/var/www/html/wp-includes/certificates/${APP_HOST}.crt:ro
      # - ./certs/${CERTNAME}.key:/var/www/html/wp-includes/certificates/${APP_HOST}.key:ro
      - ./logs/wordpress-nginx/php-error.log:/var/log/error.log
      - ./logs/wordpress-nginx/php-access.log:/var/log/access.log
      - wordpress:/var/www/html:rw

  webpma-php:
    # Alpine phpMyAdmin
    image: phpmyadmin:fpm-alpine
    container_name: "${APP_ID}-webpma-php"
    hostname: "pma.${APP_HOST}"
    restart: ${DOCKER_RESTART_POLICY}
    environment:
      - PMA_HOST=db.${APP_HOST}
      - PMA_ARBITRARY=0
      - UPLOAD_LIMIT=1280M
    networks:
      # local network:
      - intnet
    volumes:
      - ./extras/php/phpSettings.conf:/usr/local/etc/php-fpm.d/zzz-phpSettings.conf
      - ./extras/pma/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php:ro
      - ./certs/ca.crt:/etc/phpmyadmin/cacert.pem:ro
      - ./certs/${PMA_CERTNAME}.crt:/etc/phpmyadmin/cert.pem:ro
      - ./certs/${PMA_CERTNAME}.key:/etc/phpmyadmin/cert-key.pem:ro
      - ./logs/wordpress-nginx/php-error.log:/var/log/error.log
      - ./logs/wordpress-nginx/php-access.log:/var/log/access.log
      - phpmyadmin:/var/www/html:rw

  db:
    # Ubuntu - db 
    image: mariadb
    container_name: "${APP_ID}-db"
    hostname: "db.${APP_HOST}"
    restart: ${DOCKER_RESTART_POLICY}
    # ports:
    #   - 3306:3306
    networks:
      # local network:
      - intnet
    environment:
      MYSQL_ROOT_PASSWORD: ${WP_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${APP_ID}
      MYSQL_USER: ${APP_ID}
      MYSQL_PASSWORD: ${WP_DB_PASSWORD}
      MYSQL_INITDB_SKIP_TZINFO: "true"
    volumes:
      - ./logs/wordpress-mysql:/var/log/mysql:rw
      - ./extras/etc/mysql/mariadb.conf.d/50-server-ssl.cnf:/etc/mysql/mariadb.conf.d/50-server.cnf:ro
      - ./certs/ca.crt:/etc/mysql/cacert.pem:ro
      - ./certs/${DB_CERTNAME}.crt:/etc/mysql/server-cert.pem:ro
      - ./certs/${DB_CERTNAME}.key:/etc/mysql/server-key.pem:ro
      - mysql:/var/lib/mysql:rw

  redis:
    # Alpine Linux
    image: redis:7-alpine
    container_name: "${APP_ID}-redis"
    # hostname: "redis.${INT_NETWORK}"
    hostname: "redis"
    restart: ${DOCKER_RESTART_POLICY}
    networks:
      # local network:
      - intnet
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    # ports:
    # - 6379:6379
    volumes:
      # - ./extras/etc/sysctl.conf:/etc/sysctl.conf:ro
      # - ./extras/redis/redis.conf:/usr/local/etc/redis/redis.conf
      # - ./extras/var/lib/sysctl.d/00-alpine.conf:/var/lib/sysctl.d/00-alpine.conf:rw
      # - ./certs/ca.crt:/etc/ssl/private/ca.crt:ro
      - redis:/data:rw

#
# === Elastic Agent as fleet server ===
#
  fleet:
    depends_on:
      webwp:
        condition: service_healthy
    # Ubuntu - fleet
    image: docker.elastic.co/beats/elastic-agent:${STACK_VERSION}
    # image: docker.elastic.co/beats/elastic-agent-complete:${STACK_VERSION} # ;-)
    restart: ${DOCKER_RESTART_POLICY}
    # ports:
    #  - ${APM_PORT}:8200
    #  - ${FLEET_PORT}:8220
    container_name: "${APP_ID}-fleet"
    hostname: "fleet.${APP_NICK}.${INT_NETWORK}"
    networks:
      # local network:
      intnet:
        aliases:
          - apm-server
    user: root # note, synthetic browser monitors require this set to `elastic-agent`
    # https://www.elastic.co/guide/en/fleet/current/agent-environment-variables.html
    environment:
      - APP_ID=${APP_ID}
      - APP_HOST=${HOST_NICK}
      - APP_NET=${APP_NET}
      - LOC_NET=${INT_NETWORK}
      - CLUSTER_NAME=${CLUSTER_NAME}
      - CLUSTER_UUID=${CLUSTER_UUID}
      - ELASTIC_AGENT_TAGS=${ELASTIC_AGENT_TAGS}
      - ELASTICSEARCH_HOSTS=https://es01.${HOST_NICK}.${APP_NET}:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=/usr/share/elastic-agent/certs/ca.crt
      - ELASTICSEARCH_CA=/usr/share/elastic-agent/certs/ca.crt
      - FLEET_ENROLL=1
      - FLEET_ENROLLMENT_TOKEN=${FLEET_ENROLLMENT_TOKEN}
      - FLEET_SERVER_ENABLE=1
      - FLEET_SERVER_ELASTICSEARCH_HOST=https://es01.${HOST_NICK}.${APP_NET}:9200
      - FLEET_SERVER_ELASTICSEARCH_USERNAME=elastic
      - FLEET_SERVER_ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - FLEET_SERVER_ELASTICSEARCH_CA=/usr/share/elastic-agent/certs/ca.crt
      - FLEET_SERVER_ELASTICSEARCH_REQUESTTIMEOUT=180000
      - FLEET_SERVER_HOST=fleet.${APP_HOST}
      - FLEET_SERVER_POLICY_ID=${FLEET_SERVER_POLICY_ID}
      - FLEET_SERVER_SERVICE_TOKEN=${FLEET_SERVER_SERVICE_TOKEN}
      - FLEET_CA=/usr/share/elastic-agent/certs/ca.crt
      - FLEET_URL=https://fleet.${APP_NICK}.${INT_NETWORK}:8220
      - FLEET_SERVER_CERT=/usr/share/elastic-agent/certs/${FLEET_CERTNAME}.crt
      - FLEET_SERVER_CERT_KEY=/usr/share/elastic-agent/certs/${FLEET_CERTNAME}.key
      - KIBANA_CA=/usr/share/elastic-agent/certs/ca.crt
      - KIBANA_FLEET_USERNAME=elastic
      - KIBANA_FLEET_PASSWORD=${ELASTIC_PASSWORD}
      - KIBANA_FLEET_HOST=https://kibana.${HOST_NICK}.${APP_NET}:5601
      - KIBANA_FLEET_CA=/usr/share/elastic-agent/certs/ca.crt
      - KIBANA_FLEET_SETUP=1
      - KIBANA_FLEET_REQUESTTIMEOUT=1200000
      - STAGE=${STAGE}
      - STACK_VERSION=${STACK_VERSION}
      - STV=${STV}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
      - ./certs:/usr/share/elastic-agent/certs
      - ./extras/elastic-agent/elastic-agent.yml:/usr/share/elastic-agent/elastic-agent.yml
      - ./extras/elastic-agent/apm-server.yml:/usr/share/elastic-agent/data/elastic-agent-${STV}/install/apm-server-${STACK_VERSION}-linux-x86_64/apm-server.yml
      - ./extras/elastic-agent/filebeat.yml:/usr/share/elastic-agent/data/elastic-agent-${STV}/install/filebeat-${STACK_VERSION}-linux-x86_64/filebeat.yml
      - ./extras/elastic-agent/metricbeat.yml:/usr/share/elastic-agent/data/elastic-agent-${STV}/install/metricbeat-${STACK_VERSION}-linux-x86_64/metricbeat.yml
      - ./logs/fleet:/usr/share/elastic-agent/state/data/logs
      - ./logs/fleet/apm-server:/usr/share/elastic-agent/data/elastic-agent-${STV}/install/apm-server-${STACK_VERSION}-linux-x86_64/logs
      - ./logs/fleet/filebeat:/usr/share/elastic-agent/data/elastic-agent-${STV}/install/filebeat-${STACK_VERSION}-linux-x86_64/logs
      - ./logs/fleet/metricbeat:/usr/share/elastic-agent/data/elastic-agent-${STV}/install/metricbeat-${STACK_VERSION}-linux-x86_64/logs
      - ./logs/wordpress-nginx/:/usr/share/elastic-agent/data/elastic-agent-${STV}/install/filebeat-${STACK_VERSION}-linux-x86_64/elogs/nginx/platypus-wordpress-mysql
      - ./logs/wordpress-mysql/:/usr/share/elastic-agent/data/elastic-agent-${STV}/install/filebeat-${STACK_VERSION}-linux-x86_64/elogs/mysql/platypus-wordpress-mysql
      - fleet:/usr/share/elastic-agent
#     labels:
#       - "traefik.enable=true"
#       - "traefik.docker.network=${DOCKER_NETWORK}"
#       - "traefik.http.routers.webwp-apm-server-${NUM}-public.rule=Host(`amp-server.${APP_NICK}.${INT_NETWORK}`)"
#       - "traefik.http.routers.webwp-apm-server-${NUM}-public.entrypoints=https"
#       - "traefik.http.routers.webwp-apm-server-${NUM}-public.tls=true"
#       - "traefik.http.routers.webwp-apm-server-${NUM}-public.service=webwp-apm-server-${APP_ID}"
#       - "traefik.http.services.webwp-apm-server-${APP_ID}.loadbalancer.server.port=8200"
#       - "traefik.http.services.webwp-apm-server-${APP_ID}.loadbalancer.server.scheme=http"
#       #
#       - "traefik.http.routers.webwp-fleet-${NUM}-public.rule=Host(`fleet.${APP_NICK}.${INT_NETWORK}`)"
#       - "traefik.http.routers.webwp-fleet-${NUM}-public.entrypoints=https"
#       - "traefik.http.routers.webwp-fleet-${NUM}-public.tls=true"
#       - "traefik.http.routers.webwp-fleet-${NUM}-public.service=webwp-fleet-${APP_ID}"
#       - "traefik.http.services.webwp-fleet-${APP_ID}.loadbalancer.server.port=8220"
#       - "traefik.http.services.webwp-fleet-${APP_ID}.loadbalancer.server.scheme=https"
    healthcheck:
      test: ["CMD-SHELL", "elastic-agent status | grep 'Status: HEALTHY'"]
      interval: 10s
      timeout: 10s
      retries: 500
     
#       
#   Redis Commander - Web Console for Redis
#        
#   webwp-rc:
#     image: rediscommander/redis-commander:latest
#     container_name: "${APP_ID}-webrc"
#     hostname: "rc.${APP_HOST}"
#     # build: .
#     restart: ${DOCKER_RESTART_POLICY}
#     networks:
#       # for traefik:
#       - default
#       # local network:
#       - intnet
#     environment:
#       - REDIS_HOSTS=redis
#     #ports:
#     # - "8081:8081"
#     labels:
#       - "traefik.enable=true"
#       - "traefik.docker.network=${DOCKER_NETWORK}"
#       - "traefik.http.routers.webwp-rc-${NUM}-public.rule=Host(`rc.${APP_HOST}`)"
#       - "traefik.http.routers.webwp-rc-${NUM}-public.entrypoints=https"
#       - "traefik.http.routers.webwp-rc-${NUM}-public.tls=true"
#       - "traefik.http.services.webwp-rc-platypus-${APP_ID}.loadbalancer.server.port=8081"
#       - "traefik.http.services.webwp-rc-platypus-${APP_ID}.loadbalancer.server.scheme=http"
   
volumes:
  wordpress:
    external: true
    name: "${NAME}-wp-${NUM}"
  phpmyadmin:
    external: true
    name: "${NAME}-pma-${NUM}"
  mysql:
    external: true
    name: "${NAME}-db-${NUM}"
  redis:
    external: true
    name: "${NAME}-redis-${NUM}"
  fleet:
    external: true
    name: "${NAME}-fleet-${NUM}"
