version: '3.9'

volumes:
  mysql:
    external: true
    name: "${NAME}-db-${NUM}"
  wordpress:
    external: true
    name: "${APP_ID}"
  phpmyadmin:
    external: true
    name: "${NAME}-pma-${NUM}"

networks:
  default:
    external: true
    name: ${DOCKER_NETWORK}
  # common intranet network:
  intnet:
    external: false
    name: ${INT_NETWORK}

services:
  webwp:
    # Alpine WORDPRESS
    image: nginx:alpine
    # image: lhsradek/lhsdock:v3
    container_name: "${APP_ID}-webwp"
    hostname: "webwp.${INT_NETWORK}"
    # restart: "no"
    restart: always
    # ports:
    #  - 4443:443
    networks:
      # for traefik:
      - default
      - intnet
    volumes:
      # - /root/bin/alpine:/root/bin/alpine:ro
      # - ./context/root/bin:/root/bin:rw
      - ./extras/nginx/wordpress/default-http.conf:/etc/nginx/conf.d/default.conf:ro
      # - ./extras/nginx/wordpress/default-https.conf:/etc/nginx/conf.d/default.conf:ro
      # - ./extras/nginx/pki/${CERTNAME}.pem:/etc/ssl/private/cacert.pem:ro
      # - ./extras/nginx/pki/${CERTNAME}-key.pem:/etc/ssl/private/cacert-key.pem:ro
      - wordpress:/var/www/html:rw
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${DOCKER_NETWORK}"
      - "traefik.http.routers.${APP_ID}-webwp-public.rule=Host(`${APP_HOST}`)"
      - "traefik.http.routers.${APP_ID}-webwp-public.entrypoints=https"
      - "traefik.http.routers.${APP_ID}-webwp-public.tls=true"
      # - "traefik.http.services.webwp-platypus-${NAME}-mysql.loadbalancer.server.scheme=https"
      # - "traefik.http.services.webwp-platypus-${NAME}-mysql.loadbalancer.server.port=443"

  webpma:
    # Alpine phpMyAdmin
    image: nginx:alpine
    # image: lhsradek/lhsdock:v3
    container_name: "${APP_ID}-webpma"
    hostname: "pma.${APP_HOST}"
    # restart: "no"
    restart: always
    networks:
      # for traefik:
      - default
      - intnet
    volumes:
      # - /root/bin/alpine:/root/bin/alpine:ro
      # - ./context/root/bin:/root/bin:rw
      - ./extras/nginx/pma/default.conf:/etc/nginx/conf.d/default.conf:ro
      - phpmyadmin:/var/www/html:rw
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${DOCKER_NETWORK}"
      - "traefik.http.routers.${APP_ID}-webpma-public.rule=Host(`pma.${APP_HOST}`)"
      - "traefik.http.routers.${APP_ID}-webpma-public.entrypoints=https"
      - "traefik.http.routers.${APP_ID}-webpma-public.tls=true"

  webwp-php:
    # Alpine WORDPRESS
    image: wordpress:fpm-alpine
    container_name: "${APP_ID}-webwp-php"
    hostname: "webwp.${INT_NETWORK}"
    # restart: "no"
    restart: always
    environment:
      - WORDPRESS_DB_HOST=db.${INT_NETWORK}
      - WORDPRESS_DB_NAME=${APP_ID}
      - WORDPRESS_DB_USER=${APP_ID}
      - WORDPRESS_DB_PASSWORD=${WP_DB_PASSWORD}
      - HEADLESS_FRONTEND_URL=${HEADLESS_FRONTEND_URL}
      - |
        WORDPRESS_CONFIG_EXTRA=
        define( 'WP_HOME', "${WP_HOME}" );
    networks:
      - intnet
    volumes:
      # - /root/bin/alpine:/root/bin/alpine:ro
      # - ./extras/nginx/pki/${CERTNAME}.pem:/etc/ssl/private/cacert.pem:ro
      # - ./extras/nginx/pki/${CERTNAME}-key.pem:/etc/ssl/private/cacert-key.pem:ro
      # - ./context/root/bin:/root/bin:rw
      # - ./application/html/wordpress/wp-config.php:/var/www/html/wp-config.php:rw
      # - ./application/html/wordpress/wp-includes/class-wp-http.php:/var/www/html/wp-includes/class-wp-http.php:rw
      # - ./application/html/wordpress/wp-includes/update.php:/var/www/html/wp-includes/update.php:rw
      - wordpress:/var/www/html:rw

  webpma-php:
    # Alpine phpMyAdmin php
    image: phpmyadmin:fpm-alpine
    container_name: "${APP_ID}-webpma-php"
    hostname: "pma.${APP_HOST}"
    # restart: "no"
    restart: always
    # restart: always
    environment:
      - PMA_HOST=db.${INT_NETWORK}
      - PMA_ARBITRARY=0
    networks:
      - intnet
    volumes:
      # -  /root/bin/alpine:/root/bin/alpine:ro
      # - ./context/root/bin:/root/bin:rw
      - ./application/html/pma/config.inc.php:/var/www/html/config.inc.php:ro
      - phpmyadmin:/var/www/html:rw

  db:
    # Ubuntu - db 
    image: mariadb
    container_name: "${APP_ID}-db"
    hostname: "db.${INT_NETWORK}"
    # restart: "no"
    restart: always
    # ports:
    #  - 3306:3306
    networks:
      - intnet
    environment:
      MYSQL_ROOT_PASSWORD: ${WP_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${APP_ID}
      MYSQL_USER: ${APP_ID}
      MYSQL_PASSWORD: ${WP_DB_PASSWORD}
    volumes:
      # - /root/bin/ubuntu:/root/bin/ubuntu:ro
      - mysql:/var/lib/mysql
